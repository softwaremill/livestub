name: CI

on:
  push:
    branches: [ "**" ]
    tags: [ v* ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v12
        with:
          java-version: adopt@1.11
      - name: Run tests with sbt
        run: sbt test
      - name: Compile docs with mdoc
        run: sbt compileDocumentation

  publish:
    name: Publish release
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v12
      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  publish_docker:
    name: Publish docker image
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v12
      - run: sbt docker:publish
